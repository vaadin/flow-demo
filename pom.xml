<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.vaadin.hummingbird.demo</groupId>
    <artifactId>hummingbird-demo-project</artifactId>
    <name>Hummingbird Demo</name>
    <packaging>pom</packaging>
    <version>0.0.22-SNAPSHOT</version>

    <modules>
        <module>demo-test-util</module>
        <module>demo-minesweeper-element</module>
        <module>demo-minesweeper-component</module>
        <module>demo-minesweeper-polymer</module>
        <module>demo-hello-world</module>
        <module>demo-hello-world-template</module>
        <module>demo-web-site</module>
        <module>demo-static-menu</module>
        <module>demo-dynamic-menu</module>
        <module>demo-utils</module>
        <module>demo-textfield-component</module>
        <module>demo-textfield-composite</module>
        <module>demo-web-component-progress-bubble</module>
        <module>demo-addressbook</module>
        <module>demo-addressbook-polymer</module>
        <!-- have it as the last module-->
        <module>demo-validator</module>
    </modules>

    <properties>
        <!-- Libraries -->
        <hummingbird.version>${project.version}</hummingbird.version>
        <commons.beanutils.version>1.9.3</commons.beanutils.version>

        <!-- Plugins -->
        <jetty.version>9.3.7.v20160115</jetty.version>
        <frontend.maven.plugin.version>1.3</frontend.maven.plugin.version>
        <maven.failsafe.plugin.version>2.19.1</maven.failsafe.plugin.version>
        <driver.binary.downloader.maven.plugin.version>1.0.11</driver.binary.downloader.maven.plugin.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <failOnMissingWebXml>false</failOnMissingWebXml>
        <sonar.java.source>8</sonar.java.source>
        <sonar.analysis.mode>preview</sonar.analysis.mode>
        <sonar.issuesReport.console.enable>true</sonar.issuesReport.console.enable>
        <sonar.issuesReport.html.enable>true</sonar.issuesReport.html.enable>
        <phantomjs.plugin.version>0.7</phantomjs.plugin.version>
        <phantomjs.version>2.1.1</phantomjs.version>
        <phantomjs.outputDir>${project.rootdir}/target/phantomjs-maven-plugin</phantomjs.outputDir>

        <!-- Frontend -->
        <node.version>v7.7.4</node.version>
        <npm.version>4.1.2</npm.version>
        <bower.working.directory>src/main/webapp</bower.working.directory>
    </properties>
    <repositories>
        <repository>
            <id>hummingbird-internal-snapshots</id>
            <url>https://repo.vaadin.com/nexus/content/repositories/hummingbird-snapshots/</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>

        <repository>
            <id>hummingbird-internal-release</id>
            <url>https://repo.vaadin.com/nexus/content/repositories/hummingbird</url>
        </repository>

        <repository>
            <id>vaadin-addons</id>
            <url>http://maven.vaadin.com/vaadin-addons</url>
        </repository>

    </repositories>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>3.1.0</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>com.vaadin</groupId>
                <artifactId>hummingbird</artifactId>
                <version>${hummingbird.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vaadin</groupId>
                <artifactId>vaadin-testbench</artifactId>
                <version>5.0.0</version>
            </dependency>
            <dependency>
                <groupId>com.vaadin.hummingbird.demo</groupId>
                <artifactId>demo-utils</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vaadin.hummingbird.demo</groupId>
                <artifactId>demo-test-util</artifactId>
                <version>${project.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.6.1</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.0.2</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.0.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>

            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.0.0</version>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven.failsafe.plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <systemPropertyVariables>
                        <phantomjs.binary.path>${phantomjs.binary}</phantomjs.binary.path>
                        <webdriver.chrome.driver>${webdriver.chrome.driver}</webdriver.chrome.driver>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.0.0</version>
                <configuration>
                    <archive>
                        <manifestEntries>
                            <Implementation-Title>${project.name}</Implementation-Title>
                            <Implementation-Version>${project.version}</Implementation-Version>
                        </manifestEntries>
                    </archive>
                    <packagingExcludes>node_modules/,node/,etc/,**/bower.json,**/package.json</packagingExcludes>
                </configuration>
            </plugin>

            <!-- The Jetty plugin allows us to easily test the development build by
                running jetty:run on the command line. -->
            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>${jetty.version}</version>
                <configuration>
                    <scanIntervalSeconds>-1</scanIntervalSeconds>
                    <stopPort>8081</stopPort>
                    <stopWait>5</stopWait>
                    <stopKey>foo</stopKey>
                    <!-- Prevent Jetty from scanning the classpath. -->
                    <!-- Speeds up startup time significantly -->
                    <webAppConfig>
                        <webInfIncludeJarPattern>.*/hummingbird-.*.jar$</webInfIncludeJarPattern>
                        <containerIncludeJarPattern>^$</containerIncludeJarPattern>
                    </webAppConfig>
                </configuration>
                <executions>
                    <!-- start and stop jetty (running our app) when running integration
                        tests -->
                    <execution>
                        <id>start-jetty</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop-jetty</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.github.klieber</groupId>
                <artifactId>phantomjs-maven-plugin</artifactId>
                <version>${phantomjs.plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>install</goal>
                        </goals>
                        <configuration>
                            <version>${phantomjs.version}</version>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.commonjava.maven.plugins</groupId>
                <artifactId>directory-maven-plugin</artifactId>
                <version>0.1</version>
                <executions>
                    <execution>
                        <id>directories</id>
                        <goals>
                            <goal>highest-basedir</goal>
                        </goals>
                        <phase>initialize</phase>
                        <configuration>
                            <property>project.rootdir</property>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <!--This plugin's configuration is used to store Eclipse m2e settings
                    only. It has no influence on the Maven build itself. -->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>
                                            com.lazerycode.selenium
                                        </groupId>
                                        <artifactId>
                                            driver-binary-downloader-maven-plugin
                                        </artifactId>
                                        <versionRange>
                                            [${driver.binary.downloader.maven.plugin.version},)
                                        </versionRange>
                                        <goals>
                                            <goal>selenium</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore></ignore>
                                    </action>
                                </pluginExecution>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>
                                            com.github.klieber
                                        </groupId>
                                        <artifactId>
                                            phantomjs-maven-plugin
                                        </artifactId>
                                        <versionRange>
                                            [0.7,)
                                        </versionRange>
                                        <goals>
                                            <goal>install</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore></ignore>
                                    </action>
                                </pluginExecution>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>
                                            org.commonjava.maven.plugins
                                        </groupId>
                                        <artifactId>
                                            directory-maven-plugin
                                        </artifactId>
                                        <versionRange>
                                            [0.1,)
                                        </versionRange>
                                        <goals>
                                            <goal>highest-basedir</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore></ignore>
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    <profiles>
        <profile>
            <id>eclipse</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.eclipse.jetty</groupId>
                        <artifactId>jetty-maven-plugin</artifactId>
                        <version>${jetty.version}</version>
                        <configuration>
                            <webAppConfig>
                                <webInfIncludeJarPattern>^$</webInfIncludeJarPattern>
                                <!-- Configure all project META-INF/resources directories for Jetty
                                    as resource folders as Jetty inside Eclipse is run with "Resolve workspace
                                    artifacts" and this does not create any JARs. Jetty only scans JARs for META-INF/resources
                                    folders -->
                                <!-- Assumes hummingbird and hummingbird-demo have been clone in
                                    the same folder -->
                                <resourceBases>
                                    <resourceBase>
                                        ${project.basedir}/../../hummingbird/hummingbird-server/src/main/resources/META-INF/resources
                                    </resourceBase>
                                    <resourceBase>
                                        ${project.basedir}/../../hummingbird/hummingbird-client/target/classes/META-INF/resources
                                    </resourceBase>
                                    <resourceBase>
                                        ${project.basedir}/../../hummingbird/hummingbird-push/src/main/resources/META-INF/resources
                                    </resourceBase>
                                    <resourceBase>${project.basedir}/src/main/webapp</resourceBase>
                                </resourceBases>
                            </webAppConfig>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>


