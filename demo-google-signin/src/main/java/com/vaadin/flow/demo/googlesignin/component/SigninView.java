/*
 * Copyright 2000-2017 Vaadin Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */
package com.vaadin.flow.demo.googlesignin.component;

import com.vaadin.annotations.HtmlImport;
import com.vaadin.annotations.Id;
import com.vaadin.annotations.Tag;
import com.vaadin.flow.demo.googlesignin.component.SigninView.SigninModel;
import com.vaadin.flow.html.Div;
import com.vaadin.flow.template.PolymerTemplate;
import com.vaadin.flow.template.model.TemplateModel;
import com.vaadin.ui.AttachEvent;

import elemental.json.JsonObject;

/**
 * This view contains the signin button generated by the google-sigin
 * webcomponent, and an internal Div that can be used to show information about
 * the logged user.
 */
@Tag("signin-page")
@HtmlImport("frontend://components/signin.html")
public class SigninView extends PolymerTemplate<SigninModel> {

    @Id("login-info")
    private Div info;

    /**
     * Model created just to set the client-id property from the server side.
     */
    public interface SigninModel extends TemplateModel {
        void setClientId(String clientId);
    }

    @Override
    protected void onAttach(AttachEvent attachEvent) {
        // receives the "signin" event and extracts the profile info
        getElement().addEventListener("signin", evt -> {
            JsonObject eventData = evt.getEventData().getObject("event.detail");

            info.removeAll();
            SigninInfo profile = new SigninInfo();
            profile.setName(eventData.getString("name"));
            profile.setEmail(eventData.getString("email"));
            profile.setPicture(eventData.getString("picture"));
            info.add(profile);

        }, "event.detail");

        // receives the "signout" event and removes the profile info
        getElement().addEventListener("signout", evt -> info.removeAll());

        /*
         * Client ID required by the Google Authentication process. Use your own
         * ID when reusing this code. You can find more info on how to generate
         * the ID here:
         * https://developers.google.com/identity/protocols/OAuth2UserAgent
         */
        String googleAuthClientId = attachEvent.getSession().getConfiguration()
                .getApplicationOrSystemProperty("google.auth.client.id", null);

        if (googleAuthClientId == null) {
            throw new IllegalStateException(
                    "Cloud not find a Google Auth client ID. Please set one by using the "
                            + "'vaadin.google.auth.client.id' system property or by setting the "
                            + "'google.auth.client.id' servlet init parameter.");
        }

        getModel().setClientId(googleAuthClientId);
    }
}
